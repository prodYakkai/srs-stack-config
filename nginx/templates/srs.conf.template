server {
    listen 443 ssl;
    listen 80;
    server_name ${NGINX_STREAM_HOSTNAME};

    ssl_certificate ${NGINX_CERT_PEM_PATH};
    ssl_certificate_key ${NGINX_CERT_KEY_PATH};

    # For Proxy Cache.
    proxy_cache_valid  404      10s;
    proxy_cache_lock on;
    proxy_cache_lock_age 300s;
    proxy_cache_lock_timeout 300s;
    proxy_cache_min_uses 1;

    # For SRS homepage, console and players
    #   http://r.ossrs.net/console/
    #   http://r.ossrs.net/players/
    location ~ ^/(console|players)/ {
        proxy_pass http://srs:8080$request_uri;
    }

    # For SRS streaming, for example:
    location ~ /.+/.*\.(m3u8)$ {
        proxy_pass http://srs:8080$request_uri;
        # For Proxy Cache.
        proxy_cache srs_cache;
        proxy_cache_key $scheme$proxy_host$uri$args;
        proxy_cache_valid  200 302  10s;
    }
    location ~ /.+/.*\.(ts)$ {
        proxy_pass http://srs:8080$request_uri;
        # For Proxy Cache.
        proxy_cache srs_cache;
        proxy_cache_key $scheme$proxy_host$uri;
        proxy_cache_valid  200 302  15m;
    }

    # HTTP-FLV
    location ~ /.+/.*\.(flv|png)$ {
        proxy_pass http://srs:8080$request_uri;
        proxy_pass_request_headers on;
    }
    # For SRS backend API for console.
    # For SRS WebRTC publish/play API.
    location ~ ^/(api|rtc)/ {
        proxy_pass http://srs:1985$request_uri;
    }

}

server {
    listen 443 ssl;
    server_name ${NGINX_KEYSERVER_HOSTNAME};

    ssl_certificate ${NGINX_CERT_PEM_PATH};
    ssl_certificate_key ${NGINX_CERT_KEY_PATH};

    location / {
        proxy_pass http://control-api:3005;
        proxy_pass_request_headers on;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
    }
}
